"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientFactory = exports.DefaultProviderUrls = void 0;
const tslib_1 = require("tslib");
const IProvider_1 = require("../interfaces/IProvider");
const Client_1 = require("./Client");
/** Global connection urls, for Massa's MAINNET, TESTNET and LABNET */
var DefaultProviderUrls;
(function (DefaultProviderUrls) {
    DefaultProviderUrls["MAINNET"] = "https://massa.net/api/v2";
    DefaultProviderUrls["TESTNET"] = "https://test.massa.net/api/v2";
    DefaultProviderUrls["LABNET"] = "https://labnet.massa.net/api/v2";
})(DefaultProviderUrls = exports.DefaultProviderUrls || (exports.DefaultProviderUrls = {}));
/** Massa Web3 Client Factory for easy initialization */
class ClientFactory {
    /** Factory Method for easy initializing a client using a default provider */
    static createDefaultClient(provider, retryStrategyOn = true, baseAccount) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const providers = new Array({
                url: provider,
                type: IProvider_1.ProviderType.PUBLIC
            }, {
                url: provider,
                type: IProvider_1.ProviderType.PRIVATE
            });
            const client = new Client_1.Client({
                retryStrategyOn,
                providers,
            }, baseAccount);
            yield client.wallet().setBaseAccount(baseAccount);
            return client;
        });
    }
    /** Factory Method for easy initializing a client using a custom set of private and public providers. Suitable for local node interaction */
    static createCustomClient(providers, retryStrategyOn = true, baseAccount) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const client = new Client_1.Client({
                retryStrategyOn,
                providers
            }, baseAccount);
            yield client.wallet().setBaseAccount(baseAccount);
            return client;
        });
    }
}
exports.ClientFactory = ClientFactory;
//# sourceMappingURL=ClientFactory.js.map